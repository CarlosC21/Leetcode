# PYTHON
# Given two strings s and t, return True if t is an anagram of s
# False otherwise

#Ex. 1
# Input: s = "anagram", t = "nagram"
# Output: True

#Ex. 2
# Input: s = "rat", t = "car"
# Output: False

# get() returns value of item with specified key

# Time Complexity: O(s + t) iterating through both strings
# Space Complexity: O(s + t) because you build hashmaps of s and t

def valid(s, t):
    hashset = set()
    
    if len(s) != len(t):
        return False
    countS, countT = {}, {}
    
    for i in range(len(s)):
        countS[s[i]] = 1 + countS.get(s[i], 0)
        countT[t[i]] = 1 + countT.get(t[i], 0)
    for c in countS:
        if countS[c] != countT.get(c, 0):
            return False
    return True
