# PYTHON
# arr for which the ith element is price on given day
# only permitted to complete at most one transaction
#       (buy one sell one)
# design algo to find max profit

# Input: [7,1,5,3,6,4]
# Output: 5

# using two pointers; L = Buy and R = Sell

# Max profit to keep track

# Time: linear O(n) scan through the array one time
# Space: used pointers but no array; O(1)

# solutions

def maxProfit(prices):
  l, r = 0, 1
  maxP = 0
  
  while r < len(prices):
    if prices[l] < prices[r]:
      profit = prices[r] - prices[l]
      maxP = max(maxP, profit)
    else:
      l = r
    r += 1
  return maxP
print(maxProfit([7,1,5,3,6,4]))

#------or-----------------#

def maxProfit(prices):
  max_profit = 0
  min_buy = float('inf')
  for price in prices:
    min_buy=min(min_buy, price)
    max_profit=max(max_profit, price-min_buy)
  return max_profit
